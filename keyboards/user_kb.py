from cgitb import text
from aiogram.types import (
    InlineKeyboardMarkup, InlineKeyboardButton,
    ReplyKeyboardMarkup, KeyboardButton, keyboard_button
)
from config import CATEGORIES

# üîπ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
def main_menu_button() -> list:
    return [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]

# üîπ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def main_menu() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üõç –ö–∞—Ç–∞–ª–æ–≥")],
            [KeyboardButton(text="üõí –ö–æ—Ä–∑–∏–Ω–∞")],
            [KeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å")]
        ],
        resize_keyboard=True
    )

# üîπ –ú–µ–Ω—é —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
def catalog_menu() -> InlineKeyboardMarkup:
    kb = [[InlineKeyboardButton(text=category, callback_data=f"category_{category}")]
          for category in CATEGORIES]
    kb.append(main_menu_button())
    return InlineKeyboardMarkup(inline_keyboard=kb)

# üîπ –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –≤–∫—É—Å–∞ –∏ –¥–µ–π—Å—Ç–≤–∏–π —Å —Ç–æ–≤–∞—Ä–æ–º
def product_actions_kb(product_id: str, in_cart: bool = False, flavors: list = None) -> InlineKeyboardMarkup:
    buttons = []

    if not in_cart and flavors:
        for i, flavor in enumerate(flavors, 1):
            if isinstance(flavor, dict):
                name = flavor.get('name', '')
                quantity = flavor.get('quantity', 0)
            else:
                name = flavor
                quantity = 1  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—á–∏—Ç–∞–µ–º —á—Ç–æ –≤–∫—É—Å –¥–æ—Å—Ç—É–ø–µ–Ω

            if quantity > 0:
                buttons.append([
                    InlineKeyboardButton(
                        text=f"{i}. {name} ({quantity} —à—Ç.)",
                        callback_data=f"sf_{product_id}_{i}"
                    )
                ])

    buttons.append([
        InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_catalog"),
        *main_menu_button()
    ])

    return InlineKeyboardMarkup(inline_keyboard=buttons)

# üîπ –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –≤ –∫–æ—Ä–∑–∏–Ω–µ
def cart_actions_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑", callback_data="checkout")],
        [
            InlineKeyboardButton(text="üóë –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É", callback_data="clear_cart"),
            InlineKeyboardButton(text="üõç –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∫—É–ø–∫–∏", callback_data="back_to_catalog")
        ],
        main_menu_button()
    ])

# üîπ –ú–µ–Ω—é –ø–æ–º–æ—â–∏
def help_menu() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ùì –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑", callback_data="help_how_to_order")],
        [InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∞", callback_data="help_payment")],
        [InlineKeyboardButton(text="üöö –î–æ—Å—Ç–∞–≤–∫–∞", callback_data="help_delivery")],
        [InlineKeyboardButton(text="ü§ô–ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="help_contact")],
        main_menu_button()
        ])

# üîπ –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞–º–∏ –≤ –∫–æ—Ä–∑–∏–Ω–µ
def cart_full_kb(cart_items: list) -> InlineKeyboardMarkup:
    keyboard = []

    for item in cart_items:
        item_id = item['product_id']
        keyboard.append([
            InlineKeyboardButton(text="‚ûñ", callback_data=f"decrease_{item_id}"),
            InlineKeyboardButton(text=item['name'], callback_data="noop"),
            InlineKeyboardButton(text="‚ûï", callback_data=f"increase_{item_id}")
        ])

    keyboard.extend(cart_actions_kb().inline_keyboard)
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# üîπ –û–¥–∏–Ω–æ—á–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –ø–æ–º–æ—â–∏
def help_button_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="show_help")]
    ])
