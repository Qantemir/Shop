from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from config import CATEGORIES

def main_menu() -> ReplyKeyboardMarkup:#–æ—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —é—Å–µ—Ä–∞
    kb = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üõç –ö–∞—Ç–∞–ª–æ–≥")],
            [KeyboardButton(text="üõí –ö–æ—Ä–∑–∏–Ω–∞")], 
            [KeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å")]
        ],
        resize_keyboard=True
    )
    return kb

def catalog_menu() -> InlineKeyboardMarkup:#–∫–Ω–æ–∫–ø–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —é—Å–µ—Ä–∞
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=category, callback_data=f"category_{category}")]
        for category in CATEGORIES
    ] + [
        [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ])
    return kb

def product_actions_kb(product_id: str, in_cart: bool = False, flavors: list = None) -> InlineKeyboardMarkup:
    buttons = []

    if flavors and not in_cart:
        for i, flavor in enumerate(flavors, 1):
            flavor_name = flavor.get('name', '') if isinstance(flavor, dict) else flavor
            flavor_quantity = flavor.get('quantity', 0) if isinstance(flavor, dict) else 0

            if flavor_quantity > 0:
                callback_data = f"sf_{product_id}_{i}"

                buttons.append([
                    InlineKeyboardButton(
                        text=f"{i}. {flavor_name} ({flavor_quantity} —à—Ç.)",
                        callback_data=callback_data
                    )
                ])

    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    buttons.append([
        InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_catalog"),
        InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    ])

    return InlineKeyboardMarkup(inline_keyboard=buttons)

def cart_actions_kb() -> InlineKeyboardMarkup:#–∫–Ω–æ–ø–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚úÖ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑", callback_data="checkout"),
        ],
        [
            InlineKeyboardButton(text="üóë –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É", callback_data="clear_cart"),
            InlineKeyboardButton(text="üõç –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∫—É–ø–∫–∏", callback_data="back_to_catalog")
        ],
        [
            InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
        ]
    ])

def help_menu() -> InlineKeyboardMarkup:#–•–µ–ª–ø –∫–Ω–æ–ø–∫–∏
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ùì –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑", callback_data="help_how_to_order")],
        [InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∞", callback_data="help_payment")],
        [InlineKeyboardButton(text="üöö –î–æ—Å—Ç–∞–≤–∫–∞", callback_data="help_delivery")],
        [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ])

def cart_full_kb(cart_items: list) -> InlineKeyboardMarkup:#–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ
    keyboard = []

    for item in cart_items:
        item_id = item['product_id']
        keyboard.append([
            InlineKeyboardButton(text=f"‚ûñ {item['name']}", callback_data=f"decrease_{item_id}"),
            InlineKeyboardButton(text=f"‚ûï {item['name']}",callback_data=f"increase_{item_id}")
        ])

    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –∫–æ—Ä–∑–∏–Ω—ã
    keyboard.extend(cart_actions_kb().inline_keyboard)

    return InlineKeyboardMarkup(inline_keyboard=keyboard)