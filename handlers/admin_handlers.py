from aiogram import types, Dispatcher
from keyboards.admin_kb import admin_menu
from utils.database import get_all_categories, update_product_quantity

async def admin_panel(message: types.Message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–æ–º."""
    if message.from_user.id != ADMIN_ID:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.")
        return

    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å!", reply_markup=admin_menu)

async def view_database(message: types.Message):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ —Ç–æ–≤–∞—Ä–æ–≤."""
    if message.from_user.id != ADMIN_ID:
        return

    categories = get_all_categories()
    response = "üìÇ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:\n\n"
    for category, products in categories.items():
        response += f"üîπ {category}\n"
        for product in products:
            response += f"  - {product['name']} ({product['quantity']})\n"
    await message.answer(response)

async def confirm_order(callback_query: types.CallbackQuery):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –∑–∞–∫–∞–∑ –∏ —Å–ø–∏—Å—ã–≤–∞–µ—Ç —Ç–æ–≤–∞—Ä –∏–∑ –±–∞–∑—ã."""
    if callback_query.from_user.id != ADMIN_ID:
        return

    order_id = callback_query.data.split("_")[1]
    success = update_product_quantity(order_id)
    
    if success:
        await callback_query.message.edit_text("‚úÖ –ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!")
    else:
        await callback_query.message.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞.")

def register_handlers(dp: Dispatcher):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."""
    dp.register_message_handler(admin_panel, commands=["admin"])
    dp.register_message_handler(view_database, commands=["view_db"])
    dp.register_callback_query_handler(confirm_order, lambda c: c.data.startswith("confirm_"))
